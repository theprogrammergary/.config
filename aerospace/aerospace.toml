# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your likign

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to wrok
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0'
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 10

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = ['move-mouse window-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.left =       10
outer.bottom =     10
outer.top =        10
outer.right =      10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in retina display i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''
cmd-1 = '''exec-and-forget open -a Cursor'''
cmd-2 = '''exec-and-forget osascript /Users/garrett/code/dev-gary/Scripts/mac/launch-arc-localhost.scpt'''
cmd-3 = '''exec-and-forget osascript /Users/garrett/code/dev-gary/Scripts/mac/launch-arc-tradester.scpt'''
cmd-4 = '''exec-and-forget osascript /Users/garrett/code/dev-gary/Scripts/mac/launch-arc-tph.scpt'''
cmd-5 = '''exec-and-forget open -a Brave\ Browser'''
cmd-6 = '''exec-and-forget osascript /Users/garrett/code/dev-gary/Scripts/mac/launch-tradingview.scpt'''
cmd-7 = '''exec-and-forget osascript /Users/garrett/code/dev-gary/Scripts/mac/launch-win11.scpt'''
cmd-8 = '''exec-and-forget open -a iTerm'''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
ctrl-slash = 'layout tiles horizontal vertical'
ctrl-comma = 'layout accordion horizontal'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
ctrl-a = 'focus left'
ctrl-s = 'focus down'
ctrl-d = 'focus up'
ctrl-f = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
ctrl-shift-a = 'move left'
ctrl-shift-s = 'move down'
ctrl-shift-d = 'move up'
ctrl-shift-f = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
ctrl-shift-minus = 'resize smart -50'
ctrl-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
ctrl-1 = ['workspace 1Ô∏è‚É£', 'layout accordion vertical'] # code
ctrl-2 = ['workspace 2Ô∏è‚É£', 'layout accordion vertical'] # browser
ctrl-3 = ['workspace 2Ô∏è‚É£', 'layout accordion vertical'] # browser
ctrl-4 = ['workspace 2Ô∏è‚É£', 'layout accordion vertical'] # browser
ctrl-5 = 'workspace ‚òÖ' # discord / youtube browser

ctrl-6 = ['workspace üìâ', 'workspace üìà'] # trading
ctrl-7 = ['workspace üìà', 'workspace üìâ'] # trading2
ctrl-8 = ['workspace üõ†Ô∏è', 'layout accordion vertical'] # util
ctrl-9 = ['workspace ‚àû', 'layout accordion vertical'] # other
ctrl-0 = 'workspace üíª' # terminal

ctrl-equal = 'fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-ctrl-1 = ['move-node-to-workspace 1Ô∏è‚É£', 'workspace 1Ô∏è‚É£']
alt-ctrl-2 = ['move-node-to-workspace 2Ô∏è‚É£', 'workspace 2Ô∏è‚É£']
alt-ctrl-3 = ['move-node-to-workspace 2Ô∏è‚É£', 'workspace 2Ô∏è‚É£']
alt-ctrl-4 = ['move-node-to-workspace 2Ô∏è‚É£', 'workspace 2Ô∏è‚É£']
alt-ctrl-5 = ['move-node-to-workspace ‚òÖ', 'workspace ‚òÖ']

alt-ctrl-6 = ['move-node-to-workspace üìà', 'workspace üìà']
alt-ctrl-7 = ['move-node-to-workspace üìâ', 'workspace üìâ']
alt-ctrl-8 = ['move-node-to-workspace üõ†Ô∏è', 'workspace üõ†Ô∏è']
alt-ctrl-9 = ['move-node-to-workspace ‚àû', 'workspace ‚àû']
alt-ctrl-0 = ['move-node-to-workspace üíª', 'workspace üíª']


# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth`
# alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-Monitor
# alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
ctrl-enter = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
# e = ['disable', 'mode main']
enter = ['reload-config', 'mode main']
q = ['close-all-windows-but-current', 'mode main']
r = ['flatten-workspace-tree', 'mode main']
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
esc = ['close-all-windows-but-current', 'fullscreen', 'mode main']

alt-ctrl-a = ['join-with left', 'mode main']
alt-ctrl-s = ['join-with down', 'mode main']
alt-ctrl-d = ['join-with up', 'mode main']
alt-ctrl-f = ['join-with right', 'mode main']



# force workspace assignment
[workspace-to-monitor-force-assignment]
"1Ô∏è‚É£" = "^Portable \\(2\\)$" # code
"2Ô∏è‚É£" = "^Portable \\(1\\)$" # browser
"‚òÖ" = ["Sidecar Display", 'built-in']

"üìà" = "^Portable \\(2\\)$" # trading
"üìâ" = "^Portable \\(1\\)$" # trading2

"üíª" = 'built-in' # browser
"üõ†Ô∏è" = 'built-in' # util
"‚àû" = 'built-in' # other

# app detections
[[on-window-detected]]
if.app-id = 'com.todesktop.230313mzl4w4u92' # cursor 
run = ["move-node-to-workspace 1Ô∏è‚É£"]

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser' # arc browser 
run = "move-node-to-workspace 2Ô∏è‚É£"  

[[on-window-detected]]
if.app-id = 'com.brave.Browser' # personal browser
run = "move-node-to-workspace ‚òÖ"

[[on-window-detected]]
if.app-id = 'com.tradingview.tradingviewapp.desktop' #trading 1 
run = "move-node-to-workspace üìà"

[[on-window-detected]]
if.app-id = 'com.parallels.desktop.console' #trading 2 
run = "move-node-to-workspace üìâ"


[[on-window-detected]]
if.app-id = 'com.authy' # authy 
run = "move-node-to-workspace üõ†Ô∏è"

[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2' # iterm2 
run = "move-node-to-workspace üíª"

# all other windows go to other
[[on-window-detected]]
if.app-name-regex-substring = ".*"
run = ["move-node-to-workspace ‚àû"]






